broker:
    full_url: http://localhost:3000 #formerly frontend_url
    email_token_key: "1234" # can we use a better example to prevent the number/string ambiguity?
    # e-mail used as reply-to address on e-mail sent by the broker
    reply_to_email: rebecca.sweger@gsa.gov #renamed from system_email
    # e-mail for broker admin user
    # (will also server as username for logging into the broker website)
    admin_email: rebecca.sweger@gsa.gov
    # password for broker admin user
    admin_password: adminpassword
    # The path where the broker will store submitted files, error reports,
    # and other data. This should be an absolute path.
    # Ignored if use_aws is true.
    # (replaces deprecated server_directory and local_folder)
    broker_files: /Users/rebeccasweger/Dev/data-act-test/data-act-broker
    # Set to true and fill in all aws_ settings
    # to use an AWS S3 bucket for broker files
    use_aws: false
    # Name of AWS S3 bucket for uploaded broker files. Ignored if use_aws
    # is false.
    aws_bucket: dev-data-act-submission
    # Name of the AWS role you're using to upload broker files. Ignored if
    # use_aws is false.
    aws_role: arn:aws:iam::515495268755:role/s3Uploader
    # Set the following to true to allow the broker to create temporary
    # AWS credentials for uploading files. Ignore if use_aws is false.
    aws_create_temp_credentials: true #renamed from create_credentials
    # local: deprecated--b/c code still references this, will be set
    # programmatically when config file is imported

services:
    rest_trace: true
    server_debug: true
    #origins: "*" #renamed to cross_origin_url
    # URL/IP hosting the broker API (assumes services are hosted together)
    broker_api_host: 0.0.0.0
    broker_api_port: 3333 #make sure things work if no port specificed
    # URL/IP hosting the validator API (assumes services are hosted together)
    validator_host: 0.0.0.0
    validator_port: 3334 #make sure things work if no port specified
    cross_origin_url: '*' #renamed from origins
    error_report_path:
    #server_directory: replace with broker.broker_Files
    #local_folder: replace with broker.broker_files

db:
    engine: postgres
    host: localhost
    port: 5432
    username: rebeccasweger
    password: yourpasswordhere
    base_db_name: postgres
    user_db_name: user_manager
    job_db_name: job_tracker
    staging_db_name: staging
    validator_db_name: validation
    error_db_name: error_data
    # The broker uses DynamoDb for session management. If
    # use_aws is true above, the broker will use a
    # Dynamo instance on your AWS account. Otherwise,
    # provide a dynamo host and port below.
    dynamo_host: 0.0.0.0
    dynamo_port: 8000

logging:
    # The path where broker still store log files.
    # Ignored if use_logstash is true.
    log_files: /Users/rebeccasweger/Dev/data-act-test/
    # Set to true and fill in all logstash_ settings
    # to use logstash for logging
    use_logstash: true
    # Logstash EC2 host. Ignored if use_logstash is false.
    logstash_host: ec2-52-73-52-11.compute-1.amazonaws.com
    # Logstash EC2 port. Ignore if use_logstash is false.
    logstash_port: 514

