############################################
### Sample Data Act Broker Configuration ###
############################################


broker:

    # Specify the url where the front end of the application will be accessed. 
    # For a local installation this will most likely be localhost or the 
    # location where the /public files are located. If a port is required, 
    # it should be appended to the URL.
    full_url: http://localhost:3000 


    # Set the key (string) used to serialize tokens for email validations.
    email_token_key: "1234"

    # Specify valid email addressed to be used as reply-to for user 
    # administration emails.
    reply_to_email: valid.email@domain.com 

    # Set valid email address and password to be used for initial admin account
    admin_email: valid.email@domain.com
    admin_password: adminpassword

    # The path where the broker will store submitted files, error reports,
    # and other data. This should be an absolute path. Note that this path 
    # is ignored if use_aws is true.
    broker_files: /path/to/broker/files


    ## AWS Configuration Settings ##

    # If set to true the application will use AWS for the storage of files 
    # submitted to the broker AND to access the dynamo db for session handling.  
    # Note that you must have the aws cli installed and credentials set in  
    # order to use AWS.
    use_aws: false 

    # Name of AWS S3 bucket for uploaded broker files. Ignored if use_aws
    # is false. NOTE: the dummy value below MUST be changed to the correct
    # value if use_aws is true
    aws_bucket: sample-aws-bucket-name
 
    # Name of the AWS role you're using to upload broker files. Ignored if
    # use_aws is false. NOTE: the dummy value below MUST be changed to the
    # correct value if use_aws is true
    aws_role: arn:aws:iam::123456789012:role/roleName
 
    # Set the following to true to allow the broker to create temporary
    # AWS credentials for uploading files. Ignore if use_aws is false. 
    aws_create_temp_credentials: true


services:
    # Set to true to turn on tracing rest errors
    rest_trace: true

    # Set to true to turn on server debugging
    server_debug: true

    #origins: "*" #renamed to cross_origin_url
    # URL/IP hosting the broker API (assumes services are hosted together)
    broker_api_host: 0.0.0.0
    broker_api_port: 3333 #make sure things work if no port specificed

    # URL/IP hosting the validator API (assumes services are hosted together)
    validator_host: 0.0.0.0
    validator_port: 3334 #make sure things work if no port specified

    # If you would like to restrict access from other origins, set the
    # allowed origins here. Otherwise, leave as '*'
    cross_origin_url: '*' #renamed from origins
    error_report_path: ''


db:
    # Set to postgres by default
    engine: postgres

    # Host and port of db instance. Set to localhost if running locally or set 
    # the remote address
    host: localhost
    port: 5432

    # Set your username and password for the db instance
    username: yourusername
    password: yourpassword

    # Set the names for each of the application databases
    base_db_name: postgres #This is the default db on the instance. 
    user_db_name: user_manager # User manager db
    job_db_name: job_tracker # Job tracker db
    staging_db_name: staging # Staging db
    validator_db_name: validation # Validation db
    error_db_name: error_data # Error data db

    # The broker uses DynamoDb for session management. If
    # use_aws is true above, the broker will use a
    # Dynamo instance on your AWS account. Otherwise,
    # provide a dynamo host and port below.
    dynamo_host: 0.0.0.0
    dynamo_port: 8000

logging:

    # The path where broker still store log files.
    # Ignored if use_logstash is true.
    log_files: /path/to/logfiles
    # Set to true and fill in all logstash_ settings
    # to use logstash for logging
    use_logstash: true

    # Logstash EC2 host. Ignored if use_logstash is false.
    logstash_host: logstash-host.compute-1.amazonaws.com

    # Logstash EC2 port. Ignore if use_logstash is false.
    logstash_port: 514

