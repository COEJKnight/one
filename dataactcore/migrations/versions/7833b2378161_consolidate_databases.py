"""consolidate_databases

Revision ID: 7833b2378161
Revises: d279720144e8
Create Date: 2016-07-30 16:47:08.855035

"""

# revision identifiers, used by Alembic.
revision = '7833b2378161'
down_revision = 'd279720144e8'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_error_data():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('error_metadata')
    op.drop_table('file')
    op.drop_table('error_type')
    op.drop_table('file_status')
    ### end Alembic commands ###


def downgrade_error_data():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('error_metadata',
    sa.Column('error_metadata_id', sa.INTEGER(), nullable=False),
    sa.Column('job_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('filename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('field_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('error_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('occurrences', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('first_row', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rule_failed', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('original_rule_label', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('file_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('target_file_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['error_type_id'], ['error_type.error_type_id'], name='error_metadata_error_type_id_fkey'),
    sa.PrimaryKeyConstraint('error_metadata_id', name='error_metadata_pkey')
    )
    op.create_table('file_status',
    sa.Column('file_status_id', sa.INTEGER(), server_default=sa.text("nextval('file_status_file_status_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('file_status_id', name='file_status_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('error_type',
    sa.Column('error_type_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('error_type_id', name='error_type_pkey')
    )
    op.create_table('file',
    sa.Column('file_id', sa.INTEGER(), nullable=False),
    sa.Column('job_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('filename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('file_status_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('headers_missing', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('headers_duplicated', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('row_errors_present', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['file_status_id'], ['file_status.file_status_id'], name='file_file_status_id_fkey'),
    sa.PrimaryKeyConstraint('file_id', name='file_pkey'),
    sa.UniqueConstraint('job_id', name='file_job_id_key')
    )
    ### end Alembic commands ###


def upgrade_job_tracker():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('job_dependency')
    op.drop_table('job')
    op.drop_table('submission')
    op.drop_table('job_type')
    op.drop_table('job_status')
    op.drop_table('file_type')
    ### end Alembic commands ###


def downgrade_job_tracker():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job',
    sa.Column('job_id', sa.INTEGER(), server_default=sa.text("nextval('job_job_id_seq'::regclass)"), nullable=False),
    sa.Column('filename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('job_status_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('job_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('submission_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('file_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('original_filename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('number_of_rows', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('number_of_rows_valid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['file_type_id'], ['file_type.file_type_id'], name='job_file_type_id_fkey'),
    sa.ForeignKeyConstraint(['job_status_id'], ['job_status.job_status_id'], name='fk_job_status_id'),
    sa.ForeignKeyConstraint(['job_type_id'], ['job_type.job_type_id'], name='fk_job_type_id'),
    sa.ForeignKeyConstraint(['submission_id'], ['submission.submission_id'], name='fk_job_submission_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_id', name='job_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('submission',
    sa.Column('submission_id', sa.INTEGER(), server_default=sa.text("nextval('submission_submission_id_seq'::regclass)"), nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cgac_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('reporting_end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('reporting_start_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('datetime_utc', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_quarter_format', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('submission_id', name='submission_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('file_type',
    sa.Column('file_type_id', sa.INTEGER(), server_default=sa.text("nextval('file_type_file_type_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('file_type_id', name='file_type_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('job_status',
    sa.Column('job_status_id', sa.INTEGER(), server_default=sa.text("nextval('job_status_job_status_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('job_status_id', name='job_status_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('job_type',
    sa.Column('job_type_id', sa.INTEGER(), server_default=sa.text("nextval('job_type_job_type_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('job_type_id', name='job_type_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('job_dependency',
    sa.Column('dependency_id', sa.INTEGER(), nullable=False),
    sa.Column('job_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('prerequisite_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['job.job_id'], name='job_dependency_job_id_fkey'),
    sa.ForeignKeyConstraint(['prerequisite_id'], ['job.job_id'], name='job_dependency_prerequisite_id_fkey'),
    sa.PrimaryKeyConstraint('dependency_id', name='job_dependency_pkey')
    )
    ### end Alembic commands ###


def upgrade_user_manager():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('email_template')
    op.drop_table('permission_type')
    op.drop_table('email_token')
    op.drop_table('email_template_type')
    op.drop_table('user_status')

    ### end Alembic commands ###


def downgrade_user_manager():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cgac_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('permissions', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_status_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('salt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('last_login_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('incorrect_password_attempts', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('skip_guide', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_status_id'], ['user_status.user_status_id'], name='users_user_status_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', name='users_pkey')
    )
    op.create_table('user_status',
    sa.Column('user_status_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_status_id', name='user_status_pkey')
    )
    op.create_table('email_template_type',
    sa.Column('email_template_type_id', sa.INTEGER(), server_default=sa.text("nextval('email_template_type_email_template_type_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('email_template_type_id', name='email_template_type_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('email_token',
    sa.Column('email_token_id', sa.INTEGER(), nullable=False),
    sa.Column('token', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('salt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('email_token_id', name='email_token_pkey')
    )
    op.create_table('permission_type',
    sa.Column('permission_type_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('permission_type_id', name='permission_type_pkey')
    )
    op.create_table('email_template',
    sa.Column('email_template_id', sa.INTEGER(), nullable=False),
    sa.Column('template_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('subject', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['template_type_id'], ['email_template_type.email_template_type_id'], name='email_template_template_type_id_fkey'),
    sa.PrimaryKeyConstraint('email_template_id', name='email_template_pkey')
    )
    ### end Alembic commands ###


def upgrade_validation():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('award_financial_assistance')
    op.drop_table('appropriation')
    op.drop_table('file_columns')
    op.drop_table('rule_sql')
    op.drop_table('object_class_program_activity')
    op.drop_table('field_type')
    op.drop_table('cgac')
    op.drop_table('tas_lookup')
    op.drop_table('rule_severity')
    op.drop_table('file_type')
    op.drop_table('sf_133')
    op.drop_table('award_financial')
    op.drop_table('program_activity')
    op.drop_table('object_class')
    ### end Alembic commands ###


def downgrade_validation():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('object_class',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('object_class_id', sa.INTEGER(), nullable=False),
    sa.Column('object_class_code', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('object_class_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('object_class_id', name='object_class_pkey')
    )
    op.create_table('program_activity',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('program_activity_id', sa.INTEGER(), nullable=False),
    sa.Column('budget_year', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('agency_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('allocation_transfer_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('account_number', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('program_activity_code', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('program_activity_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('program_activity_id', name='program_activity_pkey')
    )
    op.create_table('award_financial',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('award_financial_id', sa.INTEGER(), nullable=False),
    sa.Column('submission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('job_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('agency_identifier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('allocation_transfer_agency', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('availability_type_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('beginning_period_of_availa', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('by_direct_reimbursable_fun', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('deobligations_recov_by_awa_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ending_period_of_availabil', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('fain', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gross_outlay_amount_by_awa_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('gross_outlay_amount_by_awa_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('gross_outlays_delivered_or_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('gross_outlays_delivered_or_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('gross_outlays_undelivered_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('gross_outlays_undelivered_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('main_account_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('object_class', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('obligations_delivered_orde_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('obligations_delivered_orde_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('obligations_incurred_byawa_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('obligations_undelivered_or_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('obligations_undelivered_or_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('parent_award_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('piid', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('program_activity_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('program_activity_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sub_account_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('transaction_obligated_amou', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('uri', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ussgl480100_undelivered_or_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl480100_undelivered_or_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl480200_undelivered_or_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl480200_undelivered_or_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl483100_undelivered_or_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl483200_undelivered_or_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl487100_downward_adjus_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl487200_downward_adjus_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl488100_upward_adjustm_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl488200_upward_adjustm_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl490100_delivered_orde_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl490100_delivered_orde_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl490200_delivered_orde_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl490800_authority_outl_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl490800_authority_outl_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl493100_delivered_orde_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl497100_downward_adjus_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl497200_downward_adjus_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl498100_upward_adjustm_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl498200_upward_adjustm_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('tas', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('row_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_first_quarter', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('award_financial_id', name='award_financial_pkey')
    )
    op.create_table('sf_133',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('sf133_id', sa.INTEGER(), nullable=False),
    sa.Column('agency_identifier', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('allocation_transfer_agency', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('availability_type_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('beginning_period_of_availa', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ending_period_of_availabil', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('main_account_code', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('sub_account_code', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('tas', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('period', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('line', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.NUMERIC(), server_default=sa.text('0::numeric'), autoincrement=False, nullable=False),
    sa.Column('fiscal_year', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('sf133_id', name='sf_133_pkey')
    )
    op.create_table('file_type',
    sa.Column('file_id', sa.INTEGER(), server_default=sa.text("nextval('file_type_file_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('file_order', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('file_id', name='file_type_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('rule_severity',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('rule_severity_id', sa.INTEGER(), server_default=sa.text("nextval('rule_severity_rule_severity_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('rule_severity_id', name='rule_severity_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('tas_lookup',
    sa.Column('tas_id', sa.INTEGER(), nullable=False),
    sa.Column('allocation_transfer_agency', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('agency_identifier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('beginning_period_of_availability', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ending_period_of_availability', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('availability_type_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('main_account_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sub_account_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('tas_id', name='tas_lookup_pkey')
    )
    op.create_table('cgac',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cgac_id', sa.INTEGER(), nullable=False),
    sa.Column('cgac_code', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('agency_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('cgac_id', name='cgac_pkey')
    )
    op.create_table('field_type',
    sa.Column('field_type_id', sa.INTEGER(), server_default=sa.text("nextval('field_type_field_type_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('field_type_id', name='field_type_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('object_class_program_activity',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('object_class_program_activity_id', sa.INTEGER(), nullable=False),
    sa.Column('submission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('job_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('agency_identifier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('allocation_transfer_agency', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('availability_type_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('beginning_period_of_availa', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('by_direct_reimbursable_fun', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('deobligations_recov_by_pro_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ending_period_of_availabil', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gross_outlay_amount_by_pro_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('gross_outlay_amount_by_pro_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('gross_outlays_delivered_or_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('gross_outlays_delivered_or_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('gross_outlays_undelivered_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('gross_outlays_undelivered_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('main_account_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('object_class', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('obligations_delivered_orde_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('obligations_delivered_orde_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('obligations_incurred_by_pr_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('obligations_undelivered_or_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('obligations_undelivered_or_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('program_activity_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('program_activity_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sub_account_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ussgl480100_undelivered_or_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl480100_undelivered_or_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl480200_undelivered_or_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl480200_undelivered_or_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl483100_undelivered_or_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl483200_undelivered_or_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl487100_downward_adjus_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl487200_downward_adjus_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl488100_upward_adjustm_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl488200_upward_adjustm_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl490100_delivered_orde_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl490100_delivered_orde_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl490200_delivered_orde_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl490800_authority_outl_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl490800_authority_outl_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl493100_delivered_orde_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl497100_downward_adjus_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl497200_downward_adjus_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl498100_upward_adjustm_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ussgl498200_upward_adjustm_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('tas', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('row_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_first_quarter', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('object_class_program_activity_id', name='object_class_program_activity_pkey')
    )
    op.create_table('rule_sql',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('rule_sql_id', sa.INTEGER(), nullable=False),
    sa.Column('rule_sql', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('rule_label', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rule_description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('rule_error_message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('rule_cross_file_flag', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('rule_severity_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('query_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('target_file_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['file_type.file_id'], name='fk_file'),
    sa.ForeignKeyConstraint(['rule_severity_id'], ['rule_severity.rule_severity_id'], name='rule_sql_rule_severity_id_fkey'),
    sa.ForeignKeyConstraint(['target_file_id'], ['file_type.file_id'], name='fk_target_file'),
    sa.PrimaryKeyConstraint('rule_sql_id', name='rule_sql_pkey')
    )
    op.create_table('file_columns',
    sa.Column('file_column_id', sa.INTEGER(), nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('field_types_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('required', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('padded_flag', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('name_short', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('length', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['field_types_id'], ['field_type.field_type_id'], name='file_columns_field_types_id_fkey'),
    sa.ForeignKeyConstraint(['file_id'], ['file_type.file_id'], name='file_columns_file_id_fkey'),
    sa.PrimaryKeyConstraint('file_column_id', name='file_columns_pkey')
    )
    op.create_table('appropriation',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('appropriation_id', sa.INTEGER(), nullable=False),
    sa.Column('submission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('job_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('adjustments_to_unobligated_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('agency_identifier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('allocation_transfer_agency', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('availability_type_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('beginning_period_of_availa', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('borrowing_authority_amount_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('budget_authority_appropria_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('budget_authority_available_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('budget_authority_unobligat_fyb', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('contract_authority_amount_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('deobligations_recoveries_r_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('ending_period_of_availabil', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gross_outlay_amount_by_tas_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('main_account_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('obligations_incurred_total_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('other_budgetary_resources_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('spending_authority_from_of_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('status_of_budgetary_resour_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('sub_account_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('unobligated_balance_cpe', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('tas', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('row_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_first_quarter', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('appropriation_id', name='appropriation_pkey')
    )
    op.create_table('award_financial_assistance',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('award_financial_assistance_id', sa.INTEGER(), nullable=False),
    sa.Column('submission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('job_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('action_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('assistance_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('award_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('awardee_or_recipient_legal', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('awardee_or_recipient_uniqu', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('awarding_agency_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('awarding_agency_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('awarding_office_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('awarding_office_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('awarding_sub_tier_agency_c', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('awarding_sub_tier_agency_n', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('award_modification_amendme', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('business_funds_indicator', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('business_types', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cfda_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cfda_title', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('correction_late_delete_ind', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('face_value_loan_guarantee', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('fain', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('federal_action_obligation', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('fiscal_year_and_quarter_co', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('funding_agency_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('funding_agency_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('funding_office_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('funding_office_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('funding_sub_tier_agency_co', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('funding_sub_tier_agency_na', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_address_line1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_address_line2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_address_line3', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_city_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_city_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_congressional', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_country_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_county_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_county_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_foreign_city', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_foreign_posta', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_foreign_provi', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_state_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_state_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_zip5', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('legal_entity_zip_last4', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('non_federal_funding_amount', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('original_loan_subsidy_cost', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('period_of_performance_curr', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('period_of_performance_star', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('place_of_performance_city', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('place_of_performance_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('place_of_performance_congr', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('place_of_perform_country_c', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('place_of_perform_county_na', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('place_of_performance_forei', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('place_of_perform_state_nam', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('place_of_performance_zip4a', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('record_type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sai_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('total_funding_amount', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('uri', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('row_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_first_quarter', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('award_financial_assistance_id', name='award_financial_assistance_pkey')
    )
    ### end Alembic commands ###


def upgrade_data_broker():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('email_template_type',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('email_template_type_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('email_template_type_id')
    )
    op.create_table('email_token',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('email_token_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.Text(), nullable=True),
    sa.Column('salt', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('email_token_id')
    )
    op.create_table('error_type',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('error_type_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('error_type_id')
    )
    op.create_table('field_type',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('field_type_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('field_type_id')
    )
    op.create_table('file_status',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('file_status_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('file_status_id')
    )
    op.create_table('file_type',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('file_type_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('file_type_id')
    )
    op.create_table('file_type_validation',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('file_order', sa.Integer(), server_default='0', nullable=False),
    sa.PrimaryKeyConstraint('file_id')
    )
    op.create_table('job_status',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('job_status_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('job_status_id')
    )
    op.create_table('job_type',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('job_type_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('job_type_id')
    )
    op.create_table('permission_type',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('permission_type_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('permission_type_id')
    )
    op.create_table('rule_severity',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('rule_severity_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('rule_severity_id')
    )
    op.create_table('submission',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('datetime_utc', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('cgac_code', sa.Text(), nullable=True),
    sa.Column('reporting_start_date', sa.Date(), nullable=True),
    sa.Column('reporting_end_date', sa.Date(), nullable=True),
    sa.Column('is_quarter_format', sa.Boolean(), server_default='False', nullable=False),
    sa.PrimaryKeyConstraint('submission_id')
    )
    op.create_table('user_status',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_status_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('user_status_id')
    )
    op.create_table('email_template',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('email_template_id', sa.Integer(), nullable=False),
    sa.Column('template_type_id', sa.Integer(), nullable=True),
    sa.Column('subject', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['template_type_id'], ['email_template_type.email_template_type_id'], ),
    sa.PrimaryKeyConstraint('email_template_id')
    )
    op.create_table('error_metadata',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('error_metadata_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('filename', sa.Text(), nullable=True),
    sa.Column('field_name', sa.Text(), nullable=True),
    sa.Column('error_type_id', sa.Integer(), nullable=True),
    sa.Column('occurrences', sa.Integer(), nullable=True),
    sa.Column('first_row', sa.Integer(), nullable=True),
    sa.Column('rule_failed', sa.Text(), nullable=True),
    sa.Column('file_type_id', sa.Integer(), nullable=True),
    sa.Column('target_file_type_id', sa.Integer(), nullable=True),
    sa.Column('original_rule_label', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['error_type_id'], ['error_type.error_type_id'], ),
    sa.PrimaryKeyConstraint('error_metadata_id')
    )
    op.create_table('file',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('filename', sa.Text(), nullable=True),
    sa.Column('file_status_id', sa.Integer(), nullable=True),
    sa.Column('headers_missing', sa.Text(), nullable=True),
    sa.Column('headers_duplicated', sa.Text(), nullable=True),
    sa.Column('row_errors_present', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['file_status_id'], ['file_status.file_status_id'], name='fk_file_status_id'),
    sa.PrimaryKeyConstraint('file_id'),
    sa.UniqueConstraint('job_id')
    )
    op.create_table('file_columns',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('file_column_id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=True),
    sa.Column('field_types_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('name_short', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('required', sa.Boolean(), nullable=True),
    sa.Column('padded_flag', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('length', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['field_types_id'], ['field_type.field_type_id'], ),
    sa.ForeignKeyConstraint(['file_id'], ['file_type_validation.file_id'], ),
    sa.PrimaryKeyConstraint('file_column_id')
    )
    op.create_table('job',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.Text(), nullable=True),
    sa.Column('job_status_id', sa.Integer(), nullable=True),
    sa.Column('job_type_id', sa.Integer(), nullable=True),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.Column('file_type_id', sa.Integer(), nullable=True),
    sa.Column('original_filename', sa.Text(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('number_of_rows', sa.Integer(), nullable=True),
    sa.Column('number_of_rows_valid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['file_type_id'], ['file_type.file_type_id'], ),
    sa.ForeignKeyConstraint(['job_status_id'], ['job_status.job_status_id'], name='fk_job_status_id'),
    sa.ForeignKeyConstraint(['job_type_id'], ['job_type.job_type_id'], name='fk_job_type_id'),
    sa.ForeignKeyConstraint(['submission_id'], ['submission.submission_id'], name='fk_job_submission_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_id')
    )
    op.create_table('rule_sql',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('rule_sql_id', sa.Integer(), nullable=False),
    sa.Column('rule_sql', sa.Text(), nullable=False),
    sa.Column('rule_label', sa.Text(), nullable=True),
    sa.Column('rule_description', sa.Text(), nullable=False),
    sa.Column('rule_error_message', sa.Text(), nullable=False),
    sa.Column('rule_cross_file_flag', sa.Boolean(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=True),
    sa.Column('rule_severity_id', sa.Integer(), nullable=False),
    sa.Column('target_file_id', sa.Integer(), nullable=True),
    sa.Column('query_name', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['file_type_validation.file_id'], name='fk_file'),
    sa.ForeignKeyConstraint(['rule_severity_id'], ['rule_severity.rule_severity_id'], ),
    sa.ForeignKeyConstraint(['target_file_id'], ['file_type_validation.file_id'], name='fk_target_file'),
    sa.PrimaryKeyConstraint('rule_sql_id')
    )
    op.create_table('users',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.Text(), nullable=True),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('cgac_code', sa.Text(), nullable=True),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.Column('user_status_id', sa.Integer(), nullable=True),
    sa.Column('password_hash', sa.Text(), nullable=True),
    sa.Column('salt', sa.Text(), nullable=True),
    sa.Column('last_login_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='True', nullable=False),
    sa.Column('incorrect_password_attempts', sa.Integer(), server_default='0', nullable=False),
    sa.Column('skip_guide', sa.Boolean(), server_default='False', nullable=False),
    sa.ForeignKeyConstraint(['user_status_id'], ['user_status.user_status_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('job_dependency',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('dependency_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('prerequisite_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['job.job_id'], ),
    sa.ForeignKeyConstraint(['prerequisite_id'], ['job.job_id'], ),
    sa.PrimaryKeyConstraint('dependency_id')
    )
    ### end Alembic commands ###


def downgrade_data_broker():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('job_dependency')
    op.drop_table('users')
    op.drop_table('rule_sql')
    op.drop_table('job')
    op.drop_table('file_columns')
    op.drop_table('file')
    op.drop_table('error_metadata')
    op.drop_table('email_template')
    op.drop_table('user_status')
    op.drop_table('submission')
    op.drop_table('rule_severity')
    op.drop_table('permission_type')
    op.drop_table('job_type')
    op.drop_table('job_status')
    op.drop_table('file_type_validation')
    op.drop_table('file_type')
    op.drop_table('file_status')
    op.drop_table('field_type')
    op.drop_table('error_type')
    op.drop_table('email_token')
    op.drop_table('email_template_type')
    ### end Alembic commands ###

